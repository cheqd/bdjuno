name: "Release"
on:
  workflow_call:
defaults:
  run:
    shell: bash
permissions:
  contents: write
  packages: write


jobs:

  release-binary:
    name: "Binary"
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.set-version.outputs.VERSION }}
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod

      # Node.js setup is needed to run Semantic Release
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: "Obtain Github App token"
        id: app-token
        uses: getsentry/action-github-app-token@v1.0.6
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_APP_PRIVATE_KEY }}

      - name: "Install Semantic Release dependencies"
        run: npm ci

      - name: "Execute Semantic Release"
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version number
        id: set-version
        run: |
          VERSION=$( git describe --tags ${{ github.sha }})
          echo ::set-output name=VERSION::"$VERSION"

  release-bdjuno:
    name: "BDJuno Docker Image"
    runs-on: ubuntu-latest
    needs: release-binary
    env:
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod

      - name: Set network name
        id: set-network
        run: |
          NETWORK_NAME=${GITHUB_REF##*/}
          echo ::set-output name=NETWORK_NAME::"$NETWORK_NAME"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
          version: latest

      - name: Install DigitalOcean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Configure Docker image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: registry.digitalocean.com/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
            prefix=${{ steps.set-network.outputs.NETWORK_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ needs.release-binary.outputs.VERSION }}
          labels: |
            org.opencontainers.image.title="BDJuno for cheqd network"
            org.opencontainers.image.description="BDJuno for cheqd network"
            org.opencontainers.image.source="https://github.com/cheqd/bdjuno"
            org.opencontainers.image.vendor="Cheqd Foundation Limited"
            org.opencontainers.image.created={{date 'dddd, MMMM Do YYYY, h:mm:ss a'}}
            org.opencontainers.image.documentation="https://docs.cheqd.io/node"

      - name: Build BDJuno image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Push BDJuno image
        run: |
          docker push registry.digitalocean.com/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.tags }}

  release-hasuracli:
    name: "Hasura CLI Docker Image"
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ github.repository }}
      COMMIT_SHA: ${{ github.sha }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set network name
        id: set-network
        run: |
          NETWORK_NAME=${GITHUB_REF##*/}
          echo ::set-output name=NETWORK_NAME::"$NETWORK_NAME"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
          version: latest

      - name: Install DigitalOcean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Configure Docker image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: registry.digitalocean.com/cheqd/hasuracli
          tags: |
            ${{ steps.set-network.outputs.NETWORK_NAME }}-latest
          labels: |
            org.opencontainers.image.vendor="Cheqd Foundation Limited"
            org.opencontainers.image.created={{date 'dddd, MMMM Do YYYY, h:mm:ss a'}}
            org.opencontainers.image.documentation="https://docs.cheqd.io/node"

      - name: Build Hasura CLI image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.hasura
          platforms: linux/amd64
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Push Hasura CLI image
        run: |
          docker push registry.digitalocean.com/cheqd/hasuracli:${{ steps.set-network.outputs.NETWORK_NAME }}-latest
